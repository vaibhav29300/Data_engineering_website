{"version":3,"file":"static/js/491.a6ce5ad6.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/LightBulbIcon.js","../node_modules/@heroicons/react/24/outline/esm/WrenchScrewdriverIcon.js","pages/ProjectIdeasPage.tsx","../node_modules/@heroicons/react/24/outline/esm/LinkIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction LightBulbIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 18v-5.25m0 0a6.01 6.01 0 0 0 1.5-.189m-1.5.189a6.01 6.01 0 0 1-1.5-.189m3.75 7.478a12.06 12.06 0 0 1-4.5 0m3.75 2.383a14.406 14.406 0 0 1-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 1 0-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(LightBulbIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction WrenchScrewdriverIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M11.42 15.17 17.25 21A2.652 2.652 0 0 0 21 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 1 1-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 0 0 4.486-6.336l-3.276 3.277a3.004 3.004 0 0 1-2.25-2.25l3.276-3.276a4.5 4.5 0 0 0-6.336 4.486c.091 1.076-.071 2.264-.904 2.95l-.102.085m-1.745 1.437L5.909 7.5H4.5L2.25 3.75l1.5-1.5L7.5 4.5v1.409l4.26 4.26m-1.745 1.437 1.745-1.437m6.615 8.206L15.75 15.75M4.867 19.125h.008v.008h-.008v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(WrenchScrewdriverIcon);\nexport default ForwardRef;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { LightBulbIcon, LinkIcon, WrenchScrewdriverIcon } from '@heroicons/react/24/outline';\n\ninterface ProjectIdea {\n  id: string;\n  title: string;\n  description: string;\n  tools: string[];\n  difficulty: 'Beginner' | 'Intermediate' | 'Advanced';\n  tutorialLink?: string;\n}\n\nconst projectIdeasData: ProjectIdea[] = [\n  {\n    id: 'personal_portfolio_pipeline',\n    title: 'Personal Portfolio Data Pipeline',\n    description: 'Collect data from your GitHub, LinkedIn, or blog using APIs, process it, and store it in a simple database (e.g., SQLite or PostgreSQL). Visualize insights like commit frequency or popular blog topics.',\n    tools: ['Python (Requests, Pandas)', 'SQLite/PostgreSQL', 'Cron/Scheduler', 'Matplotlib/Seaborn (optional)'],\n    difficulty: 'Beginner',\n    tutorialLink: 'https://www.example.com/portfolio-pipeline-tutorial' // Placeholder\n  },\n  {\n    id: 'twitter_sentiment_analysis',\n    title: 'Real-time Twitter Sentiment Analysis',\n    description: 'Stream tweets using the Twitter API, perform sentiment analysis on them, and display results on a live dashboard. This project introduces streaming concepts.',\n    tools: ['Python (Tweepy)', 'Kafka/RabbitMQ (for streaming)', 'NLTK/VADER (sentiment analysis)', 'Elasticsearch/OpenSearch', 'Kibana/Grafana (dashboarding)'],\n    difficulty: 'Intermediate',\n  },\n  {\n    id: 'ecomm_etl_dwh',\n    title: 'E-commerce ETL and Data Warehouse',\n    description: 'Simulate e-commerce data (orders, customers, products). Design an ETL pipeline to load this data into a data warehouse (e.g., Snowflake, Redshift, or a local PostgreSQL). Create reports and dashboards.',\n    tools: ['Python/SQL', 'Airflow', 'DBT', 'Snowflake/Redshift/BigQuery/PostgreSQL', 'Tableau/PowerBI/Metabase'],\n    difficulty: 'Intermediate',\n    tutorialLink: 'https://www.example.com/ecommerce-etl-tutorial' // Placeholder\n  },\n  {\n    id: 'log_analytics_platform',\n    title: 'Log Analytics Platform',\n    description: 'Collect, process, and analyze application logs. Build a system to ingest logs, parse them, store them in a searchable format, and create alerts for specific error patterns.',\n    tools: ['Fluentd/Logstash', 'Kafka', 'Spark Streaming/Flink', 'Elasticsearch/OpenSearch', 'Kibana/Grafana'],\n    difficulty: 'Advanced',\n  },\n  {\n    id: 'iot_data_pipeline',\n    title: 'IoT Sensor Data Pipeline',\n    description: 'Simulate sensor data from IoT devices. Build a pipeline to ingest this high-volume data, process it in real-time for anomalies or aggregations, and store it for historical analysis.',\n    tools: ['MQTT/Kafka', 'Spark Streaming/Flink/Kinesis Data Analytics', 'TimescaleDB/InfluxDB', 'AWS IoT/GCP IoT Core'],\n    difficulty: 'Advanced',\n  },\n  {\n    id: 'data_lake_query_engine',\n    title: 'Simple Data Lake with Query Engine',\n    description: 'Set up a data lake using cloud storage (S3/GCS). Ingest various data formats (CSV, JSON, Parquet). Use a query engine like Presto/Trino or Apache Drill to query the data directly.',\n    tools: ['AWS S3/Google Cloud Storage', 'Apache Spark (for data processing/conversion)', 'Presto/Trino/Drill', 'Python (for orchestration)'],\n    difficulty: 'Advanced',\n  }\n];\n\nconst ProjectIdeasPage: React.FC = () => {\n  const getDifficultyClass = (difficulty: string) => {\n    switch (difficulty) {\n      case 'Beginner': return 'bg-green-100 text-green-800 dark:bg-green-700 dark:text-green-200';\n      case 'Intermediate': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-700 dark:text-yellow-200';\n      case 'Advanced': return 'bg-red-100 text-red-800 dark:bg-red-700 dark:text-red-200';\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900 text-gray-800 dark:text-white py-12 px-4 sm:px-6 lg:px-8\">\n      <motion.h1 \n        initial={{ opacity: 0, y: -30 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"text-4xl font-bold text-center mb-12 text-orange-600 dark:text-orange-400\"\n      >\n        Data Engineering Project Ideas\n      </motion.h1>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n        {projectIdeasData.map((project, index) => (\n          <motion.div \n            key={project.id}\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.4, delay: index * 0.1 }}\n            className=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-xl shadow-2xl hover:shadow-orange-500/30 dark:hover:shadow-orange-400/30 transition-shadow duration-300 flex flex-col\"\n          >\n            <div className=\"flex items-start mb-4\">\n              <LightBulbIcon className=\"h-10 w-10 text-orange-500 dark:text-orange-400 mr-4 flex-shrink-0 mt-1\" />\n              <div>\n                <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-1\">{project.title}</h2>\n                <span className={`px-3 py-1 text-xs font-semibold rounded-full ${getDifficultyClass(project.difficulty)}`}>\n                  {project.difficulty}\n                </span>\n              </div>\n            </div>\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4 leading-relaxed flex-grow text-sm\">{project.description}</p>\n            \n            <div className=\"mb-4\">\n              <h3 className=\"text-md font-semibold text-gray-700 dark:text-gray-200 mb-2 flex items-center\">\n                <WrenchScrewdriverIcon className=\"h-5 w-5 mr-2 text-orange-500 dark:text-orange-400\" /> Tools Used:\n              </h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {project.tools.map(tool => (\n                  <span key={tool} className=\"bg-orange-100 dark:bg-orange-700 text-orange-800 dark:text-orange-200 text-xs px-2 py-1 rounded-md\">\n                    {tool}\n                  </span>\n                ))}\n              </div>\n            </div>\n\n            {project.tutorialLink && (\n              <a \n                href={project.tutorialLink} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"inline-flex items-center text-sm text-blue-500 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors mt-auto self-start\"\n              >\n                Starter Template/Tutorial <LinkIcon className=\"h-4 w-4 ml-1\" />\n              </a>\n            )}\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectIdeasPage; ","import * as React from \"react\";\nfunction LinkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(LinkIcon);\nexport default ForwardRef;"],"names":["LightBulbIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","WrenchScrewdriverIcon","projectIdeasData","description","tools","difficulty","tutorialLink","ProjectIdeasPage","getDifficultyClass","_jsxs","className","children","_jsx","motion","h1","initial","opacity","y","animate","transition","duration","map","project","index","div","scale","delay","concat","tool","href","target","rel","LinkIcon"],"sourceRoot":""}